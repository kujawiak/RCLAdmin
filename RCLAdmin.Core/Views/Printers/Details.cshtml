@model RCLAdmin.Core.Models.Printer

@{
    ViewData["Title"] = "Details";
}

<h4>@Model.PrinterType.ToString()</h4>
<hr />

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.IP)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IP)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Localisation)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Localisation)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SerialNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SerialNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Info)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Info)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Person)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Person)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.PrinterId">Edytuj</a> |
    <a asp-action="Index">Powrót do rejestru</a>
</div>



<h2>Lista zdarzeń</h2>

<div id="eventList">
    @await Component.InvokeAsync("PrinterEvents", new { printerId = Model.PrinterId })
</div>

@await Html.PartialAsync("Partials/AddPrinterEvent", new RCLAdmin.Core.Models.PrinterEvent() { Printer = Model })